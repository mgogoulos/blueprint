
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                             #
# The tosca_definitions_version is a top-level property of the blueprint that #
# is used to specify the DSL version used. For Cloudify 3.3, defined versions #
# are:                                                                        #
#   - cloudify_dsl_1_0                                                        #
#   - cloudify_dsl_1_1                                                        #
#   - cloudify_dsl_1_2                                                        #
#                                                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

tosca_definitions_version: cloudify_dsl_1_2

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                             #
# Imports                                                                     #
#                                                                             #
# Imports enable blueprint authors to use cloudify plugins and/or re-use      #
# blueprint files, as well as predefined types (e.g. from the types.yaml      #
# file).                                                                      #
#                                                                             #
# Imports the cloudify-mist-plugin, which communicates with the Mist.io API.  #
#                                                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m5/types.yaml
  - http://raw.githubusercontent.com/mistio/cloudify-mist-plugin/master/plugin.yaml

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                             #
# Inputs                                                                      #
#                                                                             #
# Inputs are parameters that are injected into a blueprint, which can be      #
# referenced by using the `get_input` intrinsic function.                     #
#                                                                             #
# For a complete list of potential inputs, see the cloudify-mist-plugin,      #
# which defines all avaiable node types and the corresponding properties.     #
#                                                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

inputs:
  mist_uri:
    description: >
      The Mist.io URI. Points to the Mist.io service that will handle the
      workflows' execution. You should NOT this input, unless you are running
      your own Mist.io installation. Defaults to the Mist.io SaaS.
    default: 'https://mist.io'
    type: string
  mist_username:
    description: >
      The e-mail of the Mist.io user requesting to run this blueprint. Unless
      a user runs this blueprint outside Mist.io (directly using a shell, for
      instance), this input parameter does not need to be provided.
    default: ''
    type: string
  mist_password:
    description: >
      The password associated with the e-mail address specified above. Provide
      a password, in case an e-mail has also been provided in order to generate
      a mist_token used to authenticate to the Mist.io API.
    default: ''
    type: string
  mist_token:
    description: >
      An API Token generated by Mist.io in order to be used with every request
      to authenticate to the Mist.io API. Either a username/password combo or
      a Mist.io Token has to be specified. In the former case, the username &
      password will be used in order to auto-generate an API Token to be used
      in subsequent API calls.
    default: ''
    type: string
  mist_name:
    description: >
      The name to assign to a new VM. If not specified, one will be generated.
    type: string
    default: ''
  mist_key:
    description: >
      The ID or name of the SSH Key (that may already exists in Mist.io) to be
      deployed on the newly provisioned VMs. If the key does not already exist,
      it will be created.
    default: ''
    type: string
  mist_tags:
    description: >
      A dictionary of tags to be applied to the VM after provisioning it. This
      input may also be used to propagate a Mist.io Template's tags to the VMs
      of the Stack created. If a Template has been tagged in Mist.io, then the
      tags will be automatically merged into the existing mist_tags dictionary.
    default: {}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                             #
# DSL Definitions                                                             #
#                                                                             #
# You can use the dsl_definitions section to define arbitrary data structures #
# that can be reused in different parts of the blueprint using YAML anchors   #
# and aliases.                                                                #
#                                                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

dsl_definitions:
  mist_config: &mist_config
    mist_uri: { get_input: mist_uri }
    mist_token: { get_input: mist_token }
    mist_username: { get_input: mist_username }
    mist_password: { get_input: mist_password }

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                             #
# Node Templates                                                              #
#                                                                             #
# Node Templates describe the actual instances of node types that eventually  #
# represent the running application/service, as described in the blueprint.   #
#                                                                             #
# Node Templates represent any resource that can be provisioned/created via   #
# Mist.io, such as VMs, SSH keys, executable scripts, networks, etc.          #
#                                                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

node_templates:
  vm:
    type: cloudify.mist.nodes.Server
    properties:
      mist_config: *mist_config
      parameters:
        cloud_id: 6ae87ca86c7143cbafa707ac762ef69e
        image_id: ami-923d12f5
        size_id: t2.small
        location_id: ap-northeast-1a
        name: { get_input: mist_name }
        tags: { get_input: mist_tags }
        key: { get_input: mist_key }
